import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class GestorListaReproduccion {
	private List<Cancion> playlist;
    private Trie trie;

    public GestorListaReproduccion() {
        playlist = new ArrayList<>();
        trie = new Trie();
    }

    // Método para agregar una canción a la lista de reproducción
    public void addSong(Cancion song) {
        playlist.add(song);
        trie.insert(song);
    } 
   // Método para eliminar una canción de la lista de reproducción
    public void removeSong(String trackName, String trackId) {
        Iterator<Cancion> iterator = playlist.iterator();
        while (iterator.hasNext()) {
        	Cancion song = iterator.next();
            if (song.getTrackName().equalsIgnoreCase(trackName) && song.toString().contains(trackId)) {
                iterator.remove();
                break;
            }
        }
        trie.delete(trackName, trackId);
    }
   // Método para cambiar el orden de las canciones en la lista
    public void changeOrder(int oldIndex, int newIndex) {
        if (oldIndex < 0 || oldIndex >= playlist.size() || newIndex < 0 || newIndex >= playlist.size()) {
            throw new IndexOutOfBoundsException("Índices fuera de rango");
        }
        Cancion song = playlist.remove(oldIndex);
        playlist.add(newIndex, song);
    }
   // Método para reproducir una canción de manera aleatoria
    public Cancion playRandom() {
        if (playlist.isEmpty()) {
            return null;
        }
        Random random = new Random();
        return playlist.get(random.nextInt(playlist.size()));
    }
}
